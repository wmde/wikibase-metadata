"""Unique Constraints

Revision ID: c585ae1a8a67
Revises: 3c1f7719fedc
Create Date: 2024-07-16 23:26:04.530330

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "c585ae1a8a67"
down_revision: Union[str, None] = "3c1f7719fedc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("wikibase_log_observation_month_user") as batch_op:
        batch_op.alter_column(column_name="log_type", new_column_name="user_type")
        batch_op.create_unique_constraint(
            "unique_observation_user_type2", ["log_month_observation_id", "user_type"]
        )
    with op.batch_alter_table("wikibase_log_observation_month_type") as batch_op:
        batch_op.create_unique_constraint(
            "unique_observation_log_type1", ["log_month_observation_id", "log_type"]
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("wikibase_log_observation_month_user") as batch_op:
        batch_op.alter_column(column_name="user_type", new_column_name="log_type")
        batch_op.drop_constraint("unique_observation_user_type2", type_="unique")
    with op.batch_alter_table("wikibase_log_observation_month_type") as batch_op:
        batch_op.drop_constraint("unique_observation_log_type1", type_="unique")
    # ### end Alembic commands ###
