"""No Name or Type

Revision ID: 7fd538ca8735
Revises: bf635fa3a7ce
Create Date: 2024-10-17 00:13:58.311963

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "7fd538ca8735"
down_revision: Union[str, None] = "bf635fa3a7ce"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("wikibase_software_version") as batch_op:
        batch_op.drop_constraint(
            "unique_observation_software_type_name", type_="unique"
        )
        batch_op.create_unique_constraint(
            "unique_observation_software_id",
            ["wikibase_software_version_observation_id", "wikibase_software_id"],
        )
        batch_op.drop_column("software_type")
        batch_op.drop_column("software_name")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("wikibase_software_version") as batch_op:
        batch_op.add_column(sa.Column("software_name", sa.VARCHAR(), nullable=True))
        batch_op.add_column(
            sa.Column("software_type", sa.VARCHAR(length=9), nullable=True)
        )
        batch_op.drop_constraint("unique_observation_software_id", type_="unique")
        batch_op.create_unique_constraint(
            "unique_observation_software_type_name",
            [
                "wikibase_software_version_observation_id",
                "software_type",
                "software_name",
            ],
        )

    # update_query = sa.update(WikibaseSoftwareVersionModel).values(
    #     software_name=(
    #         sa.select(WikibaseSoftwareModel.software_name)
    #         .where(WikibaseSoftwareModel.id == WikibaseSoftwareVersionModel.software_id)
    #         .scalar_subquery()
    #     ),
    #     software_type=(
    #         sa.select(WikibaseSoftwareModel.software_type)
    #         .where(WikibaseSoftwareModel.id == WikibaseSoftwareVersionModel.software_id)
    #         .scalar_subquery()
    #     ),
    # )
    # Columns Unconsumed Error, because software_name and software_type are removed from ORM object
    update_query = sa.text(
        """
UPDATE wikibase_software_version 
SET
    software_name=(
        SELECT wikibase_software.software_name FROM wikibase_software WHERE wikibase_software.id = wikibase_software_version.wikibase_software_id
    ),
    software_type=(
        SELECT wikibase_software.software_type FROM wikibase_software WHERE wikibase_software.id = wikibase_software_version.wikibase_software_id
    )
"""
    )
    op.execute(update_query)

    with op.batch_alter_table("wikibase_software_version") as batch_op:
        batch_op.alter_column(
            "software_name", existing_type=sa.VARCHAR(length=9), nullable=False
        )
        batch_op.alter_column(
            "software_type", existing_type=sa.VARCHAR(length=9), nullable=False
        )
    # ### end Alembic commands ###
